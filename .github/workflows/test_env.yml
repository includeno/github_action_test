# https://docs.github.com/en/actions/guides
# CI name , it will display on github's action page menu
name: Github Action Build Env
# trigger on which this CI should be run
on: # push operation is operate
  push:
    # here since my repository branch is named `main` , you should follow your own repository like `master`
    branches: [main]
# CI enviroment settings ${{ env.RELEASE_VERSION }} ${{ env.TAG_NAME }}
env:
  RELEASE_VERSION: "1.0" # version
jobs:
  build:
    name: Github Action Build
    runs-on: ubuntu-latest # use latest ubuntu to run the job
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    strategy:
      matrix:
        python-version: [ '3.9' ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4 #https://github.com/actions/setup-python
        with:
          python-version: ${{ matrix.python-version }} # Version range or exact version of a Python version to use, using SemVer's version range syntax
      #设置部分灵活的环境变量
      - name: Sets build date
        run: echo "BUILD_DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV
      
      #设置部分灵活的环境变量
      - name: Set environment variable with current time
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      - name: Set environment variable with current time small
        run: echo "NOW2=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
      - name: The job has succeeded
        if: ${{ success() }}
        run: echo "success"
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest # use latest ubuntu to run the job
    steps:
      # env只作用于当前job
      - name: print outputs
        run: echo ${{env.NOW2}}
      # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
      - env:
          OUTPUT1: ${{needs.build.outputs.output1}}
          OUTPUT2: ${{needs.build.outputs.output2}}
        run: |
          echo ${{env.OUTPUT1}}
          echo ${{env.OUTPUT2}}
          echo "$OUTPUT1 $OUTPUT2"